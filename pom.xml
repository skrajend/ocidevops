<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>test</groupId>
  <artifactId>ocidevops</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>ocidevops</name>
  <description>OCI Devops Traning</description>
  
	<properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
	</properties>
  
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
		<dependency>
	    	<groupId>junit</groupId>
	    	<artifactId>junit</artifactId>
	    	<version>4.12</version>
	    	<scope>test</scope>
		</dependency>
  		
	</dependencies>
  
  <build>
  	<plugins>
  		
  		<!-- For our simple project we have not created the WEB-INF/web.xml, which is normally required by the web applications; 
  		Maven build should not fail because of that. -->
  		<plugin>
            <artifactId>maven-war-plugin</artifactId>
    		<version>2.4</version>
    		<configuration>
        		<failOnMissingWebXml>false</failOnMissingWebXml>
    		</configuration>
    	</plugin>
    	
    	<!-- Code coverage, used in sonarQube demonstration -->
    	<plugin>
    		<groupId>org.jacoco</groupId>
    		<artifactId>jacoco-maven-plugin</artifactId>
    		<version>0.8.6</version>
    		<executions>
        		<execution>
            		<id>jacoco-initialize</id>
            		<goals>
                		<goal>prepare-agent</goal>
            		</goals>
        		</execution>
        		<execution>
            		<id>jacoco-site</id>
            		<phase>package</phase>
            		<goals>
                		<goal>report</goal>
            		</goals>
        		</execution>
    		</executions>
		</plugin>
		
  	</plugins>
  </build>
  
  <profiles>
  	<profile>
  		<id>test</id>
		<activation>
			<activeByDefault>true</activeByDefault>
		</activation>
		<properties>
			<dependency.scope>test</dependency.scope>
		</properties>
  	</profile>
  </profiles>
  
</project>